[{"C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\App.js":"1","C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\index.js":"2","C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\footer\\Footer.js":"3","C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\containers\\StartContainer.js":"4","C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\containers\\DictionaryContainer.js":"5","C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\containers\\CryptoData.js":"6","C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\navbar\\navcoins\\Navcoins.js":"7","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\index.js":"8","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\App.js":"9","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\containers\\DictionaryContainer.js":"10","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\containers\\StartContainer.js":"11","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\footer\\Footer.js":"12","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\navbar\\Navbar.js":"13","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\navbar\\navcoins\\Navcoins.js":"14","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\navbar\\navlogo\\Navlogo.js":"15"},{"size":630,"mtime":1606670251339,"results":"16","hashOfConfig":"17"},{"size":200,"mtime":1606409305703,"results":"18","hashOfConfig":"17"},{"size":203,"mtime":1606678334361,"results":"19","hashOfConfig":"17"},{"size":526,"mtime":1606731397475,"results":"20","hashOfConfig":"17"},{"size":1163,"mtime":1606731451802,"results":"21","hashOfConfig":"17"},{"size":181,"mtime":1606731141866,"results":"22","hashOfConfig":"17"},{"size":821,"mtime":1606681891886,"results":"23","hashOfConfig":"17"},{"size":211,"mtime":1612982722638,"results":"24","hashOfConfig":"25"},{"size":695,"mtime":1613238288077,"results":"26","hashOfConfig":"25"},{"size":11212,"mtime":1615322168333,"results":"27","hashOfConfig":"25"},{"size":3747,"mtime":1614631443326,"results":"28","hashOfConfig":"25"},{"size":6275,"mtime":1615317965657,"results":"29","hashOfConfig":"25"},{"size":311,"mtime":1612982693117,"results":"30","hashOfConfig":"31"},{"size":1009,"mtime":1612982571106,"results":"32","hashOfConfig":"25"},{"size":678,"mtime":1612290185312,"results":"33","hashOfConfig":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ad2g06",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1b94y7u",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14id20i",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\App.js",[],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\index.js",[],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\footer\\Footer.js",[],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\containers\\StartContainer.js",["70"],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\containers\\DictionaryContainer.js",[],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\containers\\CryptoData.js",["71"],"import React from 'react';\r\n\r\nexport const CryptoData = [\r\n    \"Bitcoin\",\r\n    \"Blockchain\",\r\n    \"Kryptowaluta\",\r\n    \"DeFi\",\r\n    \"ICO\",\r\n    \"Hardfork\",\r\n    \"Proof of Stake\"\r\n];","C:\\Users\\xxx\\Desktop\\PROJEKTY\\CoinmarketApp\\my-words-app\\src\\navbar\\navcoins\\Navcoins.js",["72"],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\index.js",[],["73","74"],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\App.js",[],["75","76"],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\containers\\DictionaryContainer.js",["77"],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\containers\\StartContainer.js",[],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\footer\\Footer.js",["78","79","80"],"import React, { useState, useEffect } from 'react'\r\nimport { FiMail } from 'react-icons/fi'\r\nimport { FaRegHandPeace } from 'react-icons/fa'\r\nimport { IoLogoBitcoin } from 'react-icons/io'\r\nimport { AiFillCopy } from 'react-icons/ai'\r\nimport { IconContext } from 'react-icons';\r\nimport QrBtc from '../images/qr-btc.svg'\r\nimport QrEth from '../images/qr-eth.svg'\r\nimport './Footer.css';\r\nimport Modal from 'react-modal';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction Footer() {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [copiedAdress, setCopiedAdress] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setCopiedAdress(false);\r\n        }, 3000);\r\n        return () => clearTimeout(timer);\r\n    }, [copiedAdress]);\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <motion.span className=\"github-text\" onClick={() => setModalIsOpen(true)}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1, transition: { duration: 1 } }}\r\n            >\r\n                <a href=\"#\">O projekcie <FaRegHandPeace /></a>\r\n            </motion.span>\r\n            <Modal\r\n                className=\"Modal\"\r\n                overlayClassName=\"Overlay\"\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => setModalIsOpen(false)}\r\n            >\r\n                <div className=\"modal-div\">\r\n                    <IconContext.Provider value={{ color: \"ff9900\", size: \"25px\", marginTop: \"50px\" }}>\r\n                        <div className=\"modal-exit\">\r\n                            <button onClick={() => setModalIsOpen(false)}>X</button>\r\n                        </div>\r\n                        <div className=\"modal-header\">\r\n                            <h1>O projekcie <FaRegHandPeace /></h1>\r\n                        </div>\r\n                        <div className=\"modal-paragraph\">\r\n                            <p><span className=\"logo-grey\">cotocrypto</span><span className=\"logo-orange\">.pl  </span>to projekt który ma za zadanie edukować początkujących oraz doświadczonych uczestników rynku w zakresie słownictwa powiązanego z technologią blockchain oraz kryptowalutami.</p>\r\n                        </div>\r\n                        <div className=\"modal-header\">\r\n                            <h1>Wspomóż projekt<IoLogoBitcoin /></h1>\r\n                        </div>\r\n                        <div className=\"modal-paragraph\">\r\n                            <p>Jeśli podoba się Tobie projekt i chciałbyś pomóc w rozwoju, to możesz dofinansować inicjatywę przelewając Satoshi lub Ethereum. Projekt również jest zweryfikowanym wydawcą przeglądarki Brave.</p>\r\n                        </div>\r\n                    </IconContext.Provider>\r\n                    <div className=\"modal-qrcode\">\r\n                        <div className=\"modal-qrbox\">\r\n                            <img className=\"qr-code\" src={QrBtc} />\r\n                            <span class=\"btcadress-header\">ADRES BTC:</span>\r\n                            <span class=\"btcadress-adress\">bc1qd5030jzt94rx9em8c5790m3h8aswqxz7vwwuwz</span>\r\n                            <IconContext.Provider value={{ color: \"ff9900\", size: \"12px\" }}>\r\n                                <CopyToClipboard text=\"bc1qd5030jzt94rx9em8c5790m3h8aswqxz7vwwuwz\" onCopy={() => setCopiedAdress(true)}>\r\n                                    <motion.button class=\"btcbutton\"\r\n                                        whileHover={{ scale: 1.2, rotate: 10 }}\r\n                                    >\r\n                                        <AiFillCopy />KOPIUJ</motion.button>\r\n                                </CopyToClipboard>\r\n                            </IconContext.Provider>\r\n                        </div>\r\n                        <div className=\"modal-qrbox\">\r\n                            <img className=\"qr-code\" src={QrEth} />\r\n                            <span class=\"btcadress-header\">ADRES ETH:</span>\r\n                            <span class=\"btcadress-adress\">0x4892825ec9657033B4fA6250537Bc30B8180C134</span>\r\n                            <IconContext.Provider value={{ color: \"#62688F\", size: \"12px\" }}>\r\n                                <CopyToClipboard text=\"0x4892825ec9657033B4fA6250537Bc30B8180C134\" onCopy={() => setCopiedAdress(true)}>\r\n                                    <motion.button class=\"ethbutton\"\r\n                                        whileHover={{ scale: 1.2, rotate: -10 }}\r\n                                    >\r\n                                        <AiFillCopy />KOPIUJ</motion.button>\r\n                                </CopyToClipboard>\r\n                            </IconContext.Provider>\r\n                            <AnimatePresence>\r\n                                {copiedAdress ? (\r\n                                    <motion.div className=\"copied-notification\"\r\n                                        initial={{ opacity: 0, y: 50, scale: 0.3 }}\r\n                                        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n                                        exit={{ opacity: 0, scale: 0.5, transition: { duration: 0.2 } }}\r\n                                    >\r\n                                        <span>Skopiowano!</span>\r\n                                    </motion.div>\r\n                                ) : null}\r\n                            </AnimatePresence>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <motion.span className=\"github-text\"\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1, transition: { duration: 2 } }}\r\n            >\r\n                <a href=\"mailto: dezignProjects@outlook.com\">\r\n                    Skontaktuj się <FiMail />\r\n                </a>\r\n            </motion.span>\r\n            <motion.span className=\"github-text\"\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1, transition: { duration: 3 } }}\r\n            >\r\n                &copy; {1900 + new Date().getYear()} by dZ\r\n            </motion.span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\navbar\\Navbar.js",[],"C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\navbar\\navcoins\\Navcoins.js",["81"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport './Navcoins.css';\r\n\r\nfunction Navcoins() {\r\n    const [coins, setCoins] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=pln&order=market_cap_desc&per_page=20&page=1&sparkline=false')\r\n            .then(res => {\r\n                setCoins(res.data);\r\n                console.log(res.data)\r\n            }).catch(error => console.log(error));\r\n    }, []);\r\n    return (\r\n        <div className=\"navcoin-container\">\r\n            <ul>\r\n                {coins.map((item, index) => (\r\n                    <li key={index}>\r\n                        <img src={item.image} />\r\n                        <span>{item.symbol} </span>\r\n                        <span>{item.current_price.toFixed(2)}</span>\r\n                        <span>PLN</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navcoins\r\n","C:\\Users\\xxx\\Desktop\\PROJEKTY\\cotocrypto-cryptoDictionary\\src\\navbar\\navlogo\\Navlogo.js",["82","83","84"],"import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { GiBlackBook } from 'react-icons/gi';\r\nimport './Navlogo.css';\r\nimport Logo from './cotocryptologo.png'\r\n\r\nfunction Navlogo() {\r\n    return (\r\n        <>\r\n            <div className=\"logo-navbar\">\r\n                {/* <IconContext.Provider value={{ color: \"ff9900\", size: '35px' }}>\r\n                    <GiBlackBook />\r\n                </IconContext.Provider> */}\r\n                <img className=\"logo-photo\" src ={Logo} />\r\n                <span className=\"logo-grey\">cotocrypto</span><span className=\"logo-orange\">.pl</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navlogo\r\n",{"ruleId":"85","severity":1,"message":"86","line":14,"column":13,"nodeType":"87","endLine":14,"endColumn":66},{"ruleId":"88","severity":1,"message":"89","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":19,"column":13,"nodeType":"87","endLine":19,"endColumn":37},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":87,"column":21,"nodeType":"87","endLine":87,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":34,"column":17,"nodeType":"87","endLine":34,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":62,"column":29,"nodeType":"87","endLine":62,"endColumn":68},{"ruleId":"85","severity":1,"message":"86","line":75,"column":29,"nodeType":"87","endLine":75,"endColumn":68},{"ruleId":"85","severity":1,"message":"86","line":20,"column":25,"nodeType":"87","endLine":20,"endColumn":49},{"ruleId":"88","severity":1,"message":"100","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":21},{"ruleId":"88","severity":1,"message":"101","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":14,"column":17,"nodeType":"87","endLine":14,"endColumn":59},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'IconContext' is defined but never used.","'GiBlackBook' is defined but never used.","no-global-assign","no-unsafe-negation"]